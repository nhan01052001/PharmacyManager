diff --git a/node_modules/react-native/.DS_Store b/node_modules/react-native/.DS_Store
new file mode 100644
index 0000000..88b140a
Binary files /dev/null and b/node_modules/react-native/.DS_Store differ
diff --git a/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.d.ts b/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.d.ts
index 89bdd37..0778adf 100644
--- a/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.d.ts
+++ b/node_modules/react-native/Libraries/ActionSheetIOS/ActionSheetIOS.d.ts
@@ -7,8 +7,8 @@
  * @format
  */
 
-import {ProcessedColorValue} from '../StyleSheet/processColor';
-import {ColorValue} from '../StyleSheet/StyleSheet';
+import {ProcessedColorValue} from 'react-native/Libraries/StyleSheet/processColor';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
 
 /**
  * @see: https://reactnative.dev/docs/actionsheetios#content
diff --git a/node_modules/react-native/Libraries/Animated/Animated.d.ts b/node_modules/react-native/Libraries/Animated/Animated.d.ts
index 3301ff3..84a2305 100644
--- a/node_modules/react-native/Libraries/Animated/Animated.d.ts
+++ b/node_modules/react-native/Libraries/Animated/Animated.d.ts
@@ -8,14 +8,14 @@
  */
 
 import type * as React from 'react';
-import {ScrollView} from '../Components/ScrollView/ScrollView';
-import {View} from '../Components/View/View';
-import {Image} from '../Image/Image';
-import {FlatListProps} from '../Lists/FlatList';
-import {DefaultSectionT, SectionListProps} from '../Lists/SectionList';
-import {ColorValue} from '../StyleSheet/StyleSheet';
-import {Text} from '../Text/Text';
-import {NativeSyntheticEvent} from '../Types/CoreEventTypes';
+import {ScrollView} from 'react-native/Libraries/Components/ScrollView/ScrollView';
+import {View} from 'react-native/Libraries/Components/View/View';
+import {Image} from 'react-native/Libraries/Image/Image';
+import {FlatListProps} from 'react-native/Libraries/Lists/FlatList';
+import {DefaultSectionT, SectionListProps} from 'react-native/Libraries/Lists/SectionList';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {Text} from 'react-native/Libraries/Text/Text';
+import {NativeSyntheticEvent} from 'react-native/Libraries/Types/CoreEventTypes';
 
 export namespace Animated {
   type AnimatedValue = Value;
diff --git a/node_modules/react-native/Libraries/Animated/useAnimatedValue.d.ts b/node_modules/react-native/Libraries/Animated/useAnimatedValue.d.ts
index 69e5a59..8901278 100644
--- a/node_modules/react-native/Libraries/Animated/useAnimatedValue.d.ts
+++ b/node_modules/react-native/Libraries/Animated/useAnimatedValue.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import type {Animated} from './Animated';
+import type {Animated} from 'react-native/Libraries/Animated/Animated';
 
 export function useAnimatedValue(
   initialValue: number,
diff --git a/node_modules/react-native/Libraries/AppState/AppState.d.ts b/node_modules/react-native/Libraries/AppState/AppState.d.ts
index 45beaca..340b572 100644
--- a/node_modules/react-native/Libraries/AppState/AppState.d.ts
+++ b/node_modules/react-native/Libraries/AppState/AppState.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {NativeEventSubscription} from '../EventEmitter/RCTNativeAppEventEmitter';
+import {NativeEventSubscription} from 'react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter';
 
 /**
  * AppState can tell you if the app is in the foreground or background,
diff --git a/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.d.ts b/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.d.ts
index 8ac2a29..5a80426 100644
--- a/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.d.ts
+++ b/node_modules/react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo.d.ts
@@ -8,8 +8,8 @@
  */
 
 import type * as React from 'react';
-import {HostComponent} from '../../../types/public/ReactNativeTypes';
-import {EmitterSubscription} from '../../vendor/emitter/EventEmitter';
+import {HostComponent} from 'react-native/types/public/ReactNativeTypes';
+import {EmitterSubscription} from 'react-native/Libraries/vendor/emitter/EventEmitter';
 
 type AccessibilityChangeEventName =
   | 'change' // deprecated, maps to screenReaderChanged
diff --git a/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.d.ts b/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.d.ts
index f1a4b24..e71537d 100644
--- a/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.d.ts
+++ b/node_modules/react-native/Libraries/Components/ActivityIndicator/ActivityIndicator.d.ts
@@ -8,12 +8,12 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
-import {LayoutChangeEvent} from '../../Types/CoreEventTypes';
-import {ViewProps} from '../View/ViewPropTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+import {LayoutChangeEvent} from 'react-native/Libraries/Types/CoreEventTypes';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 /**
  * @see https://reactnative.dev/docs/activityindicator#props
diff --git a/node_modules/react-native/Libraries/Components/Button.d.ts b/node_modules/react-native/Libraries/Components/Button.d.ts
index 7063071..f5ed90f 100644
--- a/node_modules/react-native/Libraries/Components/Button.d.ts
+++ b/node_modules/react-native/Libraries/Components/Button.d.ts
@@ -8,9 +8,9 @@
  */
 
 import type * as React from 'react';
-import {ColorValue} from '../StyleSheet/StyleSheet';
-import {TouchableNativeFeedbackProps} from './Touchable/TouchableNativeFeedback';
-import {TouchableOpacityProps} from './Touchable/TouchableOpacity';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {TouchableNativeFeedbackProps} from 'react-native/Libraries/Components/Touchable/TouchableNativeFeedback';
+import {TouchableOpacityProps} from 'react-native/Libraries/Components/Touchable/TouchableOpacity';
 
 export interface ButtonProps
   extends Pick<
diff --git a/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.d.ts b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.d.ts
index 17c60b7..7b1cfd9 100644
--- a/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.d.ts
+++ b/node_modules/react-native/Libraries/Components/DatePicker/DatePickerIOS.d.ts
@@ -8,9 +8,9 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ViewProps} from '../View/ViewPropTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 export interface DatePickerIOSProps extends ViewProps {
   /**
diff --git a/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.d.ts b/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.d.ts
index 9f90951..b88cd4f 100644
--- a/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.d.ts
+++ b/node_modules/react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid.d.ts
@@ -8,14 +8,14 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ColorValue} from '../../StyleSheet/StyleSheet';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
 import {
   NativeSyntheticEvent,
   NativeTouchEvent,
-} from '../../Types/CoreEventTypes';
-import {ViewProps} from '../View/ViewPropTypes';
+} from 'react-native/Libraries/Types/CoreEventTypes';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 export interface DrawerSlideEvent
   extends NativeSyntheticEvent<NativeTouchEvent> {}
diff --git a/node_modules/react-native/Libraries/Components/Keyboard/Keyboard.d.ts b/node_modules/react-native/Libraries/Components/Keyboard/Keyboard.d.ts
index 062016e..baeb973 100644
--- a/node_modules/react-native/Libraries/Components/Keyboard/Keyboard.d.ts
+++ b/node_modules/react-native/Libraries/Components/Keyboard/Keyboard.d.ts
@@ -7,8 +7,8 @@
  * @format
  */
 
-import {NativeEventEmitter} from '../../EventEmitter/NativeEventEmitter';
-import {EmitterSubscription} from '../../vendor/emitter/EventEmitter';
+import {NativeEventEmitter} from 'react-native/Libraries/EventEmitter/NativeEventEmitter';
+import {EmitterSubscription} from 'react-native/Libraries/vendor/emitter/EventEmitter';
 
 export type KeyboardEventName =
   | 'keyboardWillShow'
diff --git a/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.d.ts b/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.d.ts
index 42bff4a..586355f 100644
--- a/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.d.ts
+++ b/node_modules/react-native/Libraries/Components/Keyboard/KeyboardAvoidingView.d.ts
@@ -8,11 +8,11 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {TimerMixin} from '../../../types/private/TimerMixin';
-import {StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
-import {ViewProps} from '../View/ViewPropTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {TimerMixin} from 'react-native/types/private/TimerMixin';
+import {StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 /**
  * It is a component to solve the common problem of views that need to move out of the way of the virtual keyboard.
diff --git a/node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts b/node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts
index 640e412..25f1223 100644
--- a/node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts
+++ b/node_modules/react-native/Libraries/Components/Pressable/Pressable.d.ts
@@ -8,18 +8,18 @@
  */
 
 import type * as React from 'react';
-import {Insets} from '../../../types/public/Insets';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
+import {Insets} from 'react-native/types/public/Insets';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 import {
   GestureResponderEvent,
   MouseEvent,
   NativeSyntheticEvent,
   TargetedEvent,
-} from '../../Types/CoreEventTypes';
-import {View} from '../View/View';
-import {AccessibilityProps} from '../View/ViewAccessibility';
-import {ViewProps} from '../View/ViewPropTypes';
+} from 'react-native/Libraries/Types/CoreEventTypes';
+import {View} from 'react-native/Libraries/Components/View/View';
+import {AccessibilityProps} from 'react-native/Libraries/Components/View/ViewAccessibility';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 export interface PressableStateCallbackType {
   readonly pressed: boolean;
diff --git a/node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.d.ts b/node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.d.ts
index a368adf..82f3454 100644
--- a/node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.d.ts
+++ b/node_modules/react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid.d.ts
@@ -8,10 +8,10 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ColorValue} from '../../StyleSheet/StyleSheet';
-import {ViewProps} from '../View/ViewPropTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 /**
  * ProgressBarAndroid has been extracted from react-native core and will be removed in a future release.
diff --git a/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.d.ts b/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.d.ts
index 1f38df7..27c671b 100644
--- a/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.d.ts
+++ b/node_modules/react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS.d.ts
@@ -8,11 +8,11 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {ImageURISource} from '../../Image/ImageSource';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ColorValue} from '../../StyleSheet/StyleSheet';
-import {ViewProps} from '../View/ViewPropTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {ImageURISource} from 'react-native/Libraries/Image/ImageSource';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 /**
  * @see https://reactnative.dev/docs/progressviewios
diff --git a/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.d.ts b/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.d.ts
index 81eba74..34cac9c 100644
--- a/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.d.ts
+++ b/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.d.ts
@@ -8,10 +8,10 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ColorValue} from '../../StyleSheet/StyleSheet';
-import {ViewProps} from '../View/ViewPropTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 export interface RefreshControlPropsIOS extends ViewProps {
   /**
diff --git a/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.d.ts b/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.d.ts
index f96a1a5..3bca88d 100644
--- a/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.d.ts
+++ b/node_modules/react-native/Libraries/Components/SafeAreaView/SafeAreaView.d.ts
@@ -8,9 +8,9 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ViewProps} from '../View/ViewPropTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 /**
  * Renders nested content and automatically applies paddings reflect the portion of the view
diff --git a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.d.ts b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.d.ts
index 3d1d94f..3ea7e3d 100644
--- a/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.d.ts
+++ b/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.d.ts
@@ -8,17 +8,17 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {Insets} from '../../../types/public/Insets';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {Insets} from 'react-native/types/public/Insets';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 import {
   NativeSyntheticEvent,
   NativeTouchEvent,
-} from '../../Types/CoreEventTypes';
-import {RefreshControlProps} from '../RefreshControl/RefreshControl';
-import {Touchable} from '../Touchable/Touchable';
-import {ViewProps} from '../View/ViewPropTypes';
+} from 'react-native/Libraries/Types/CoreEventTypes';
+import {RefreshControlProps} from 'react-native/Libraries/Components/RefreshControl/RefreshControl';
+import {Touchable} from 'react-native/Libraries/Components/Touchable/Touchable';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 // See https://reactnative.dev/docs/scrollview#contentoffset
 export interface PointProp {
diff --git a/node_modules/react-native/Libraries/Components/Slider/Slider.d.ts b/node_modules/react-native/Libraries/Components/Slider/Slider.d.ts
index 33f26d0..2cf125e 100644
--- a/node_modules/react-native/Libraries/Components/Slider/Slider.d.ts
+++ b/node_modules/react-native/Libraries/Components/Slider/Slider.d.ts
@@ -8,12 +8,12 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {ImageURISource} from '../../Image/ImageSource';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
-import {ViewProps} from '../View/ViewPropTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {ImageURISource} from 'react-native/Libraries/Image/ImageSource';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 export interface SliderPropsAndroid extends ViewProps {
   /**
diff --git a/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.d.ts b/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.d.ts
index 3dd9ab2..cefebf6 100644
--- a/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.d.ts
+++ b/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.d.ts
@@ -8,7 +8,7 @@
  */
 
 import type * as React from 'react';
-import {ColorValue} from '../../StyleSheet/StyleSheet';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
 
 export type StatusBarStyle = 'default' | 'light-content' | 'dark-content';
 
diff --git a/node_modules/react-native/Libraries/Components/Switch/Switch.d.ts b/node_modules/react-native/Libraries/Components/Switch/Switch.d.ts
index 64a735d..c2b90cd 100644
--- a/node_modules/react-native/Libraries/Components/Switch/Switch.d.ts
+++ b/node_modules/react-native/Libraries/Components/Switch/Switch.d.ts
@@ -8,12 +8,12 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
-import {ViewProps} from '../View/ViewPropTypes';
-import {NativeSyntheticEvent, TargetedEvent} from '../../Types/CoreEventTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
+import {NativeSyntheticEvent, TargetedEvent} from 'react-native/Libraries/Types/CoreEventTypes';
 
 export interface SwitchPropsIOS extends ViewProps {
   /**
diff --git a/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.d.ts b/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.d.ts
index 00edf5a..e7e3df0 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.d.ts
+++ b/node_modules/react-native/Libraries/Components/TextInput/InputAccessoryView.d.ts
@@ -8,8 +8,8 @@
  */
 
 import type * as React from 'react';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 
 /**
  * A component which enables customization of the keyboard input accessory view on iOS. The input accessory view is
diff --git a/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts b/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
index 2cbec99..ae5f85b 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
+++ b/node_modules/react-native/Libraries/Components/TextInput/TextInput.d.ts
@@ -8,22 +8,22 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {TimerMixin} from '../../../types/private/TimerMixin';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {TimerMixin} from 'react-native/types/private/TimerMixin';
 import {
   HostComponent,
   NativeMethods,
-} from '../../../types/public/ReactNativeTypes';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {TextStyle} from '../../StyleSheet/StyleSheetTypes';
+} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {TextStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 import {
   NativeSyntheticEvent,
   NativeTouchEvent,
   TargetedEvent,
-} from '../../Types/CoreEventTypes';
-import {EventEmitter} from '../../vendor/emitter/EventEmitter';
-import {AccessibilityProps} from '../View/ViewAccessibility';
-import {ViewProps} from '../View/ViewPropTypes';
+} from 'react-native/Libraries/Types/CoreEventTypes';
+import {EventEmitter} from 'react-native/Libraries/vendor/emitter/EventEmitter';
+import {AccessibilityProps} from 'react-native/Libraries/Components/View/ViewAccessibility';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
 
 export type KeyboardType =
   | 'default'
diff --git a/node_modules/react-native/Libraries/Components/Touchable/Touchable.d.ts b/node_modules/react-native/Libraries/Components/Touchable/Touchable.d.ts
index 6915dd2..72ee0f7 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/Touchable.d.ts
+++ b/node_modules/react-native/Libraries/Components/Touchable/Touchable.d.ts
@@ -8,8 +8,8 @@
  */
 
 import type * as React from 'react';
-import {Insets} from '../../../types/public/Insets';
-import {GestureResponderEvent} from '../../Types/CoreEventTypes';
+import {Insets} from 'react-native/types/public/Insets';
+import {GestureResponderEvent} from 'react-native/Libraries/Types/CoreEventTypes';
 
 /**
  * //FIXME: need to find documentation on which component is a TTouchable and can implement that interface
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.d.ts b/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.d.ts
index b9faa3a..101ce57 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.d.ts
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.d.ts
@@ -8,13 +8,13 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {TimerMixin} from '../../../types/private/TimerMixin';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {ColorValue, StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
-import {TouchableMixin} from './Touchable';
-import {TouchableWithoutFeedbackProps} from './TouchableWithoutFeedback';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {TimerMixin} from 'react-native/types/private/TimerMixin';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+import {TouchableMixin} from 'react-native/Libraries/Components/Touchable/Touchable';
+import {TouchableWithoutFeedbackProps} from 'react-native/Libraries/Components/Touchable/TouchableWithoutFeedback';
 
 /**
  * @see https://reactnative.dev/docs/touchablehighlight#props
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.d.ts b/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.d.ts
index 9de3953..40cbf6d 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.d.ts
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableNativeFeedback.d.ts
@@ -8,12 +8,12 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {ColorValue} from '../../StyleSheet/StyleSheet';
-import {TouchableMixin} from './Touchable';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {TouchableMixin} from 'react-native/Libraries/Components/Touchable/Touchable';
 
-import type {TVProps} from './TouchableOpacity';
-import {TouchableWithoutFeedbackProps} from './TouchableWithoutFeedback';
+import type {TVProps} from 'react-native/Libraries/Components/Touchable/TouchableOpacity';
+import {TouchableWithoutFeedbackProps} from 'react-native/Libraries/Components/Touchable/TouchableWithoutFeedback';
 
 interface BaseBackgroundPropType {
   type: string;
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.d.ts b/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.d.ts
index 37c4ce6..c9d4fb2 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.d.ts
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.d.ts
@@ -8,12 +8,12 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {TimerMixin} from '../../../types/private/TimerMixin';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
-import {TVParallaxProperties} from '../View/ViewPropTypes';
-import {TouchableMixin} from './Touchable';
-import {TouchableWithoutFeedbackProps} from './TouchableWithoutFeedback';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {TimerMixin} from 'react-native/types/private/TimerMixin';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {TVParallaxProperties} from 'react-native/Libraries/Components/View/ViewPropTypes';
+import {TouchableMixin} from 'react-native/Libraries/Components/Touchable/Touchable';
+import {TouchableWithoutFeedbackProps} from 'react-native/Libraries/Components/Touchable/TouchableWithoutFeedback';
 
 export interface TVProps {
   /**
diff --git a/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.d.ts b/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.d.ts
index aa5e14b..566e80f 100644
--- a/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.d.ts
+++ b/node_modules/react-native/Libraries/Components/Touchable/TouchableWithoutFeedback.d.ts
@@ -8,19 +8,19 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {TimerMixin} from '../../../types/private/TimerMixin';
-import {Insets} from '../../../types/public/Insets';
-import {StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {TimerMixin} from 'react-native/types/private/TimerMixin';
+import {Insets} from 'react-native/types/public/Insets';
+import {StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 import {
   GestureResponderEvent,
   LayoutChangeEvent,
   NativeSyntheticEvent,
   TargetedEvent,
-} from '../../Types/CoreEventTypes';
-import {AccessibilityProps} from '../View/ViewAccessibility';
-import {TouchableMixin} from './Touchable';
+} from 'react-native/Libraries/Types/CoreEventTypes';
+import {AccessibilityProps} from 'react-native/Libraries/Components/View/ViewAccessibility';
+import {TouchableMixin} from 'react-native/Libraries/Components/Touchable/Touchable';
 
 export interface TouchableWithoutFeedbackPropsIOS {}
 
diff --git a/node_modules/react-native/Libraries/Components/View/View.d.ts b/node_modules/react-native/Libraries/Components/View/View.d.ts
index 5fbb529..deeb822 100644
--- a/node_modules/react-native/Libraries/Components/View/View.d.ts
+++ b/node_modules/react-native/Libraries/Components/View/View.d.ts
@@ -8,9 +8,9 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../../types/private/Utilities';
-import {ViewProps} from './ViewPropTypes';
-import {NativeMethods} from '../../../types/public/ReactNativeTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
 
 /**
  * The most fundamental component for building UI, View is a container that supports layout with flexbox, style, some touch handling,
diff --git a/node_modules/react-native/Libraries/Components/View/ViewAccessibility.d.ts b/node_modules/react-native/Libraries/Components/View/ViewAccessibility.d.ts
index b06d1cb..f14bcd8 100644
--- a/node_modules/react-native/Libraries/Components/View/ViewAccessibility.d.ts
+++ b/node_modules/react-native/Libraries/Components/View/ViewAccessibility.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {NativeSyntheticEvent} from '../../Types/CoreEventTypes';
+import {NativeSyntheticEvent} from 'react-native/Libraries/Types/CoreEventTypes';
 
 /**
  * @see https://reactnative.dev/docs/accessibility#accessibility-properties
diff --git a/node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts b/node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts
index b7da46f..7bf97c7 100644
--- a/node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts
+++ b/node_modules/react-native/Libraries/Components/View/ViewPropTypes.d.ts
@@ -8,13 +8,13 @@
  */
 
 import type * as React from 'react';
-import {Insets} from '../../../types/public/Insets';
-import {GestureResponderHandlers} from '../../../types/public/ReactNativeRenderer';
-import {StyleProp} from '../../StyleSheet/StyleSheet';
-import {ViewStyle} from '../../StyleSheet/StyleSheetTypes';
-import {LayoutChangeEvent, PointerEvents} from '../../Types/CoreEventTypes';
-import {Touchable} from '../Touchable/Touchable';
-import {AccessibilityProps} from './ViewAccessibility';
+import {Insets} from 'react-native/types/public/Insets';
+import {GestureResponderHandlers} from 'react-native/types/public/ReactNativeRenderer';
+import {StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+import {LayoutChangeEvent, PointerEvents} from 'react-native/Libraries/Types/CoreEventTypes';
+import {Touchable} from 'react-native/Libraries/Components/Touchable/Touchable';
+import {AccessibilityProps} from 'react-native/Libraries/Components/View/ViewAccessibility';
 
 export type TVParallaxProperties = {
   /**
diff --git a/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.d.ts b/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.d.ts
index c9f30d0..12768d1 100644
--- a/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.d.ts
+++ b/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.d.ts
@@ -10,7 +10,7 @@
 import {
   EmitterSubscription,
   EventEmitter,
-} from '../vendor/emitter/EventEmitter';
+} from 'react-native/Libraries/vendor/emitter/EventEmitter';
 
 /**
  * The React Native implementation of the IOS RCTEventEmitter which is required when creating
diff --git a/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.d.ts b/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.d.ts
index 1e92935..905acc8 100644
--- a/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.d.ts
+++ b/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.d.ts
@@ -11,7 +11,7 @@ import {
   EmitterSubscription,
   EventEmitter,
   EventSubscriptionVendor,
-} from '../vendor/emitter/EventEmitter';
+} from 'react-native/Libraries/vendor/emitter/EventEmitter';
 
 /**
  * Deprecated - subclass NativeEventEmitter to create granular event modules instead of
diff --git a/node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.d.ts b/node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.d.ts
index 4170432..b1dff72 100644
--- a/node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.d.ts
+++ b/node_modules/react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {DeviceEventEmitterStatic} from './RCTDeviceEventEmitter';
+import {DeviceEventEmitterStatic} from 'react-native/Libraries/EventEmitter/RCTDeviceEventEmitter';
 
 export interface NativeEventSubscription {
   /**
diff --git a/node_modules/react-native/Libraries/Image/Image.d.ts b/node_modules/react-native/Libraries/Image/Image.d.ts
index dd2c089..8c5efc6 100644
--- a/node_modules/react-native/Libraries/Image/Image.d.ts
+++ b/node_modules/react-native/Libraries/Image/Image.d.ts
@@ -8,15 +8,15 @@
  */
 
 import * as React from 'react';
-import {Constructor} from '../../types/private/Utilities';
-import {AccessibilityProps} from '../Components/View/ViewAccessibility';
-import {Insets} from '../../types/public/Insets';
-import {NativeMethods} from '../../types/public/ReactNativeTypes';
-import {StyleProp} from '../StyleSheet/StyleSheet';
-import {ImageStyle, ViewStyle} from '../StyleSheet/StyleSheetTypes';
-import {LayoutChangeEvent, NativeSyntheticEvent} from '../Types/CoreEventTypes';
-import {ImageResizeMode} from './ImageResizeMode';
-import {ImageRequireSource, ImageURISource} from './ImageSource';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {AccessibilityProps} from 'react-native/Libraries/Components/View/ViewAccessibility';
+import {Insets} from 'react-native/types/public/Insets';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ImageStyle, ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+import {LayoutChangeEvent, NativeSyntheticEvent} from 'react-native/Libraries/Types/CoreEventTypes';
+import {ImageResizeMode} from 'react-native/Libraries/Image/ImageResizeMode';
+import {ImageRequireSource, ImageURISource} from 'react-native/Libraries/Image/ImageSource';
 
 /**
  * @see ImagePropsIOS.onProgress
diff --git a/node_modules/react-native/Libraries/Interaction/InteractionManager.d.ts b/node_modules/react-native/Libraries/Interaction/InteractionManager.d.ts
index 8b739e1..49d1f63 100644
--- a/node_modules/react-native/Libraries/Interaction/InteractionManager.d.ts
+++ b/node_modules/react-native/Libraries/Interaction/InteractionManager.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {EmitterSubscription} from '../vendor/emitter/EventEmitter';
+import {EmitterSubscription} from 'react-native/Libraries/vendor/emitter/EventEmitter';
 
 export type Handle = number;
 
diff --git a/node_modules/react-native/Libraries/Interaction/PanResponder.d.ts b/node_modules/react-native/Libraries/Interaction/PanResponder.d.ts
index 8a2d4f2..10d6f8b 100644
--- a/node_modules/react-native/Libraries/Interaction/PanResponder.d.ts
+++ b/node_modules/react-native/Libraries/Interaction/PanResponder.d.ts
@@ -7,8 +7,8 @@
  * @format
  */
 
-import {GestureResponderHandlers} from '../../types/public/ReactNativeRenderer';
-import {GestureResponderEvent} from '../Types/CoreEventTypes';
+import {GestureResponderHandlers} from 'react-native/types/public/ReactNativeRenderer';
+import {GestureResponderEvent} from 'react-native/Libraries/Types/CoreEventTypes';
 
 export interface PanResponderGestureState {
   /**
diff --git a/node_modules/react-native/Libraries/Linking/Linking.d.ts b/node_modules/react-native/Libraries/Linking/Linking.d.ts
index 36dbe9f..4fadd06 100644
--- a/node_modules/react-native/Libraries/Linking/Linking.d.ts
+++ b/node_modules/react-native/Libraries/Linking/Linking.d.ts
@@ -7,8 +7,8 @@
  * @format
  */
 
-import {NativeEventEmitter} from '../EventEmitter/NativeEventEmitter';
-import {EmitterSubscription} from '../vendor/emitter/EventEmitter';
+import {NativeEventEmitter} from 'react-native/Libraries/EventEmitter/NativeEventEmitter';
+import {EmitterSubscription} from 'react-native/Libraries/vendor/emitter/EventEmitter';
 
 export interface LinkingStatic extends NativeEventEmitter {
   /**
diff --git a/node_modules/react-native/Libraries/Lists/FlatList.d.ts b/node_modules/react-native/Libraries/Lists/FlatList.d.ts
index 4f60e18..a3e778e 100644
--- a/node_modules/react-native/Libraries/Lists/FlatList.d.ts
+++ b/node_modules/react-native/Libraries/Lists/FlatList.d.ts
@@ -12,11 +12,11 @@ import type {
   ListRenderItem,
   ViewToken,
   VirtualizedListProps,
-} from './VirtualizedList';
-import type {ScrollViewComponent} from '../Components/ScrollView/ScrollView';
-import type {StyleProp} from '../StyleSheet/StyleSheet';
-import type {ViewStyle} from '../StyleSheet/StyleSheetTypes';
-import type {View} from '../Components/View/View';
+} from 'react-native/Libraries/Lists/VirtualizedList';
+import type {ScrollViewComponent} from 'react-native/Libraries/Components/ScrollView/ScrollView';
+import type {StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import type {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+import type {View} from 'react-native/Libraries/Components/View/View';
 
 export interface FlatListProps<ItemT> extends VirtualizedListProps<ItemT> {
   /**
diff --git a/node_modules/react-native/Libraries/Lists/SectionList.d.ts b/node_modules/react-native/Libraries/Lists/SectionList.d.ts
index ae1b10d..937663d 100644
--- a/node_modules/react-native/Libraries/Lists/SectionList.d.ts
+++ b/node_modules/react-native/Libraries/Lists/SectionList.d.ts
@@ -11,14 +11,14 @@ import type * as React from 'react';
 import type {
   ListRenderItemInfo,
   VirtualizedListWithoutRenderItemProps,
-} from './VirtualizedList';
+} from 'react-native/Libraries/Lists/VirtualizedList';
 import type {
   ScrollView,
   ScrollViewProps,
-} from '../Components/ScrollView/ScrollView';
-import {NodeHandle} from '../ReactNative/RendererProxy';
-import {StyleProp} from '../StyleSheet/StyleSheet';
-import {ViewStyle} from '../StyleSheet/StyleSheetTypes';
+} from 'react-native/Libraries/Components/ScrollView/ScrollView';
+import {NodeHandle} from 'react-native/Libraries/ReactNative/RendererProxy';
+import {StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 
 /**
  * @see https://reactnative.dev/docs/sectionlist
diff --git a/node_modules/react-native/Libraries/Lists/VirtualizedList.d.ts b/node_modules/react-native/Libraries/Lists/VirtualizedList.d.ts
index eaef385..1b47085 100644
--- a/node_modules/react-native/Libraries/Lists/VirtualizedList.d.ts
+++ b/node_modules/react-native/Libraries/Lists/VirtualizedList.d.ts
@@ -8,15 +8,15 @@
  */
 
 import type * as React from 'react';
-import type {LayoutChangeEvent} from '../../types';
-import {StyleProp} from '../StyleSheet/StyleSheet';
-import {ViewStyle} from '../StyleSheet/StyleSheetTypes';
+import type {LayoutChangeEvent} from 'react-native';
+import {StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 import type {
   ScrollResponderMixin,
   ScrollView,
   ScrollViewProps,
-} from '../Components/ScrollView/ScrollView';
-import type {View} from '../Components/View/View';
+} from 'react-native/Libraries/Components/ScrollView/ScrollView';
+import type {View} from 'react-native/Libraries/Components/View/View';
 
 export interface ViewToken {
   item: any;
diff --git a/node_modules/react-native/Libraries/Modal/Modal.d.ts b/node_modules/react-native/Libraries/Modal/Modal.d.ts
index 4cc2df2..7d62e68 100644
--- a/node_modules/react-native/Libraries/Modal/Modal.d.ts
+++ b/node_modules/react-native/Libraries/Modal/Modal.d.ts
@@ -8,8 +8,8 @@
  */
 
 import type * as React from 'react';
-import {ViewProps} from '../Components/View/ViewPropTypes';
-import {NativeSyntheticEvent} from '../Types/CoreEventTypes';
+import {ViewProps} from 'react-native/Libraries/Components/View/ViewPropTypes';
+import {NativeSyntheticEvent} from 'react-native/Libraries/Types/CoreEventTypes';
 
 export interface ModalBaseProps {
   /**
diff --git a/node_modules/react-native/Libraries/ReactNative/AppRegistry.d.ts b/node_modules/react-native/Libraries/ReactNative/AppRegistry.d.ts
index 2e792e7..89effe2 100644
--- a/node_modules/react-native/Libraries/ReactNative/AppRegistry.d.ts
+++ b/node_modules/react-native/Libraries/ReactNative/AppRegistry.d.ts
@@ -8,7 +8,7 @@
  */
 
 import type * as React from 'react';
-import type {IPerformanceLogger} from '../Utilities/createPerformanceLogger';
+import type {IPerformanceLogger} from 'react-native/Libraries/Utilities/createPerformanceLogger';
 
 type Task = (taskData: any) => Promise<void>;
 type TaskProvider = () => Task;
diff --git a/node_modules/react-native/Libraries/ReactNative/UIManager.d.ts b/node_modules/react-native/Libraries/ReactNative/UIManager.d.ts
index 1f0b346..dd751ea 100644
--- a/node_modules/react-native/Libraries/ReactNative/UIManager.d.ts
+++ b/node_modules/react-native/Libraries/ReactNative/UIManager.d.ts
@@ -12,7 +12,7 @@ import {
   MeasureInWindowOnSuccessCallback,
   MeasureLayoutOnSuccessCallback,
   MeasureOnSuccessCallback,
-} from '../../types/public/ReactNativeTypes';
+} from 'react-native/types/public/ReactNativeTypes';
 
 export interface UIManagerStatic {
   /**
diff --git a/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.d.ts b/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.d.ts
index 935762a..396f10c 100644
--- a/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.d.ts
+++ b/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {HostComponent} from '../../types/public//ReactNativeTypes';
+import {HostComponent} from 'react-native/types/public/ReactNativeTypes';
 
 /**
  * Creates values that can be used like React components which represent native
diff --git a/node_modules/react-native/Libraries/Share/Share.d.ts b/node_modules/react-native/Libraries/Share/Share.d.ts
index 76ac757..7cd15d7 100644
--- a/node_modules/react-native/Libraries/Share/Share.d.ts
+++ b/node_modules/react-native/Libraries/Share/Share.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {ColorValue} from '../StyleSheet/StyleSheet';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
 
 export type ShareContent =
   | {
diff --git a/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.d.ts b/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.d.ts
index 909f73d..0bb0e93 100644
--- a/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.d.ts
+++ b/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypes.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {OpaqueColorValue} from './StyleSheet';
+import {OpaqueColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
 
 /**
  * Select native platform color
diff --git a/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypesIOS.d.ts b/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypesIOS.d.ts
index 43720c7..227b108 100644
--- a/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypesIOS.d.ts
+++ b/node_modules/react-native/Libraries/StyleSheet/PlatformColorValueTypesIOS.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {ColorValue, OpaqueColorValue} from './StyleSheet';
+import {ColorValue, OpaqueColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
 
 type DynamicColorIOSTuple = {
   light: ColorValue;
diff --git a/node_modules/react-native/Libraries/StyleSheet/StyleSheet.d.ts b/node_modules/react-native/Libraries/StyleSheet/StyleSheet.d.ts
index 53ab3e1..0fa83fe 100644
--- a/node_modules/react-native/Libraries/StyleSheet/StyleSheet.d.ts
+++ b/node_modules/react-native/Libraries/StyleSheet/StyleSheet.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {ImageStyle, TextStyle, ViewStyle} from './StyleSheetTypes';
+import {ImageStyle, TextStyle, ViewStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 
 export interface StyleSheetProperties {
   hairlineWidth: number;
diff --git a/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.d.ts b/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.d.ts
index f693673..e2904e1 100644
--- a/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.d.ts
+++ b/node_modules/react-native/Libraries/StyleSheet/StyleSheetTypes.d.ts
@@ -7,8 +7,8 @@
  * @format
  */
 
-import {ImageResizeMode} from '../Image/ImageResizeMode';
-import {ColorValue} from './StyleSheet';
+import {ImageResizeMode} from 'react-native/Libraries/Image/ImageResizeMode';
+import {ColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
 
 type FlexAlignType =
   | 'flex-start'
diff --git a/node_modules/react-native/Libraries/StyleSheet/processColor.d.ts b/node_modules/react-native/Libraries/StyleSheet/processColor.d.ts
index d84a5a7..36bfaec 100644
--- a/node_modules/react-native/Libraries/StyleSheet/processColor.d.ts
+++ b/node_modules/react-native/Libraries/StyleSheet/processColor.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {ColorValue, OpaqueColorValue} from './StyleSheet';
+import {ColorValue, OpaqueColorValue} from 'react-native/Libraries/StyleSheet/StyleSheet';
 
 export type ProcessedColorValue = number | OpaqueColorValue;
 
diff --git a/node_modules/react-native/Libraries/Text/Text.d.ts b/node_modules/react-native/Libraries/Text/Text.d.ts
index a9d2a1b..b19b2a1 100644
--- a/node_modules/react-native/Libraries/Text/Text.d.ts
+++ b/node_modules/react-native/Libraries/Text/Text.d.ts
@@ -8,17 +8,17 @@
  */
 
 import type * as React from 'react';
-import {Constructor} from '../../types/private/Utilities';
-import {AccessibilityProps} from '../Components/View/ViewAccessibility';
-import {NativeMethods} from '../../types/public/ReactNativeTypes';
-import {ColorValue, StyleProp} from '../StyleSheet/StyleSheet';
-import {TextStyle} from '../StyleSheet/StyleSheetTypes';
+import {Constructor} from 'react-native/types/private/Utilities';
+import {AccessibilityProps} from 'react-native/Libraries/Components/View/ViewAccessibility';
+import {NativeMethods} from 'react-native/types/public/ReactNativeTypes';
+import {ColorValue, StyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';
+import {TextStyle} from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
 import {
   GestureResponderEvent,
   LayoutChangeEvent,
   NativeSyntheticEvent,
   TextLayoutEventData,
-} from '../Types/CoreEventTypes';
+} from 'react-native/Libraries/Types/CoreEventTypes';
 
 export interface TextPropsIOS {
   /**
diff --git a/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.d.ts b/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.d.ts
index 4bee7be..c17966c 100644
--- a/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.d.ts
+++ b/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {TurboModule} from './RCTExport';
+import {TurboModule} from 'react-native/Libraries/TurboModule/RCTExport';
 
 export function get<T extends TurboModule>(name: string): T | null;
 export function getEnforcing<T extends TurboModule>(name: string): T;
diff --git a/node_modules/react-native/Libraries/Types/CoreEventTypes.d.ts b/node_modules/react-native/Libraries/Types/CoreEventTypes.d.ts
index 7aff083..9657434 100644
--- a/node_modules/react-native/Libraries/Types/CoreEventTypes.d.ts
+++ b/node_modules/react-native/Libraries/Types/CoreEventTypes.d.ts
@@ -8,8 +8,8 @@
  */
 
 import type * as React from 'react';
-import {NodeHandle} from '../ReactNative/RendererProxy';
-import {HostComponent} from '../../types/public/ReactNativeTypes';
+import {NodeHandle} from 'react-native/Libraries/ReactNative/RendererProxy';
+import {HostComponent} from 'react-native/types/public/ReactNativeTypes';
 
 export interface LayoutRectangle {
   x: number;
diff --git a/node_modules/react-native/Libraries/Utilities/Appearance.d.ts b/node_modules/react-native/Libraries/Utilities/Appearance.d.ts
index 7d2faf6..860ed0f 100644
--- a/node_modules/react-native/Libraries/Utilities/Appearance.d.ts
+++ b/node_modules/react-native/Libraries/Utilities/Appearance.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {NativeEventSubscription} from '../EventEmitter/RCTNativeAppEventEmitter';
+import {NativeEventSubscription} from 'react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter';
 
 type ColorSchemeName = 'light' | 'dark' | null | undefined;
 
diff --git a/node_modules/react-native/Libraries/Utilities/BackHandler.d.ts b/node_modules/react-native/Libraries/Utilities/BackHandler.d.ts
index 72400ae..05ff044 100644
--- a/node_modules/react-native/Libraries/Utilities/BackHandler.d.ts
+++ b/node_modules/react-native/Libraries/Utilities/BackHandler.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {NativeEventSubscription} from '../EventEmitter/RCTNativeAppEventEmitter';
+import {NativeEventSubscription} from 'react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter';
 
 export type BackPressEventName = 'hardwareBackPress';
 
diff --git a/node_modules/react-native/Libraries/Utilities/DevSettings.d.ts b/node_modules/react-native/Libraries/Utilities/DevSettings.d.ts
index 9040ee0..3690349 100644
--- a/node_modules/react-native/Libraries/Utilities/DevSettings.d.ts
+++ b/node_modules/react-native/Libraries/Utilities/DevSettings.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {NativeEventEmitter} from '../EventEmitter/NativeEventEmitter';
+import {NativeEventEmitter} from 'react-native/Libraries/EventEmitter/NativeEventEmitter';
 
 /**
  * The DevSettings module exposes methods for customizing settings for developers in development.
diff --git a/node_modules/react-native/Libraries/Utilities/Dimensions.d.ts b/node_modules/react-native/Libraries/Utilities/Dimensions.d.ts
index cca9d81..a075ea1 100644
--- a/node_modules/react-native/Libraries/Utilities/Dimensions.d.ts
+++ b/node_modules/react-native/Libraries/Utilities/Dimensions.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {EmitterSubscription} from '../vendor/emitter/EventEmitter';
+import {EmitterSubscription} from 'react-native/Libraries/vendor/emitter/EventEmitter';
 
 // Used by Dimensions below
 export interface ScaledSize {
diff --git a/node_modules/react-native/scripts/.packager.env b/node_modules/react-native/scripts/.packager.env
new file mode 100644
index 0000000..361f5fb
--- /dev/null
+++ b/node_modules/react-native/scripts/.packager.env
@@ -0,0 +1 @@
+export RCT_METRO_PORT=8081
diff --git a/node_modules/react-native/sdks/hermes/hermes-engine.podspec b/node_modules/react-native/sdks/hermes/hermes-engine.podspec
new file mode 100644
index 0000000..b800547
--- /dev/null
+++ b/node_modules/react-native/sdks/hermes/hermes-engine.podspec
@@ -0,0 +1,143 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+require "json"
+require_relative "./hermes-utils.rb"
+
+react_native_path = File.join(__dir__, "..", "..")
+
+# Whether Hermes is built for Release or Debug is determined by the PRODUCTION envvar.
+build_type = ENV['PRODUCTION'] == "1" ? :release : :debug
+
+# package.json
+package = JSON.parse(File.read(File.join(react_native_path, "package.json")))
+version = package['version']
+
+# sdks/.hermesversion
+hermestag_file = File.join(react_native_path, "sdks", ".hermesversion")
+isInCI = ENV['REACT_NATIVE_CI'] === 'true'
+
+source = {}
+git = "https://github.com/facebook/hermes.git"
+
+isInMain = version.include?('1000.0.0')
+isNightly = version.start_with?('0.0.0-')
+
+if ENV.has_key?('HERMES_ENGINE_TARBALL_PATH')
+  if !File.exist?(ENV['HERMES_ENGINE_TARBALL_PATH'])
+    abort "[Hermes] HERMES_ENGINE_TARBALL_PATH is set, but points to a non-existing file: \"#{ENV['HERMES_ENGINE_TARBALL_PATH']}\"\nIf you don't want to use tarball, run `unset HERMES_ENGINE_TARBALL_PATH`"
+  end
+end
+
+if ENV.has_key?('HERMES_ENGINE_TARBALL_PATH')
+  Pod::UI.puts "[Hermes] Using pre-built Hermes binaries from local path: #{ENV['HERMES_ENGINE_TARBALL_PATH']}".yellow if Object.const_defined?("Pod::UI")
+  source[:http] = "file://#{ENV['HERMES_ENGINE_TARBALL_PATH']}"
+elsif isInMain
+  Pod::UI.puts '[Hermes] Installing hermes-engine may take slightly longer, building Hermes compiler from source...'.yellow if Object.const_defined?("Pod::UI")
+  source[:git] = git
+  source[:commit] = `git ls-remote https://github.com/facebook/hermes main | cut -f 1`.strip
+elsif isNightly
+  Pod::UI.puts '[Hermes] Nightly version, download pre-built for Hermes'.yellow if Object.const_defined?("Pod::UI")
+  destination_path = download_nightly_hermes(react_native_path, version)
+  # set tarball as hermes engine
+  source[:http] = "file://#{destination_path}"
+elsif File.exist?(hermestag_file) && isInCI
+  Pod::UI.puts '[Hermes] Detected that you are on a React Native release branch, building Hermes from source but fetched from tag...'.yellow if Object.const_defined?("Pod::UI")
+  hermestag = File.read(hermestag_file).strip
+  source[:git] = git
+  source[:tag] = hermestag
+else
+  # Sample url from Maven:
+  # https://repo1.maven.org/maven2/com/facebook/react/react-native-artifacts/0.71.0/react-native-artifacts-0.71.0-hermes-ios-debug.tar.gz
+  source[:http] = "https://repo1.maven.org/maven2/com/facebook/react/react-native-artifacts/#{version}/react-native-artifacts-#{version}-hermes-ios-#{build_type.to_s}.tar.gz"
+end
+
+Pod::Spec.new do |spec|
+  spec.name        = "hermes-engine"
+  spec.version     = version
+  spec.summary     = "Hermes is a small and lightweight JavaScript engine optimized for running React Native."
+  spec.description = "Hermes is a JavaScript engine optimized for fast start-up of React Native apps. It features ahead-of-time static optimization and compact bytecode."
+  spec.homepage    = "https://hermesengine.dev"
+  spec.license     = package['license']
+  spec.author      = "Facebook"
+  spec.source      = source
+  spec.platforms   = { :osx => "10.13", :ios => "12.4" }
+
+  spec.preserve_paths      = '**/*.*'
+  spec.source_files        = ''
+
+  spec.xcconfig = {
+                    "CLANG_CXX_LANGUAGE_STANDARD" => "c++17",
+                    "CLANG_CXX_LIBRARY" => "compiler-default"
+                  }.merge!(build_type == :debug ? { "GCC_PREPROCESSOR_DEFINITIONS" => "HERMES_ENABLE_DEBUGGER=1" } : {})
+
+  if source[:http] then
+
+    spec.subspec 'Pre-built' do |ss|
+      ss.preserve_paths = ["destroot/bin/*"].concat(build_type == :debug ? ["**/*.{h,c,cpp}"] : [])
+      ss.source_files = "destroot/include/**/*.h"
+      ss.exclude_files = ["destroot/include/jsi/jsi/JSIDynamic.{h,cpp}", "destroot/include/jsi/jsi/jsilib-*.{h,cpp}"]
+      ss.header_mappings_dir = "destroot/include"
+      ss.ios.vendored_frameworks = "destroot/Library/Frameworks/universal/hermes.xcframework"
+      ss.osx.vendored_frameworks = "destroot/Library/Frameworks/macosx/hermes.framework"
+    end
+
+  elsif source[:git] then
+
+    spec.subspec 'Hermes' do |ss|
+      ss.source_files = ''
+      ss.public_header_files = 'API/hermes/*.h'
+      ss.header_dir = 'hermes'
+    end
+
+    spec.subspec 'JSI' do |ss|
+      ss.source_files = ''
+      ss.public_header_files = 'API/jsi/jsi/*.h'
+      ss.header_dir = 'jsi'
+    end
+
+    spec.subspec 'Public' do |ss|
+      ss.source_files = ''
+      ss.public_header_files = 'public/hermes/Public/*.h'
+      ss.header_dir = 'hermes/Public'
+    end
+
+    hermesc_path = ""
+
+    if ENV.has_key?('HERMES_OVERRIDE_HERMESC_PATH') && File.exist?(ENV['HERMES_OVERRIDE_HERMESC_PATH']) then
+      hermesc_path = ENV['HERMES_OVERRIDE_HERMESC_PATH']
+    else
+      # Keep hermesc_path synchronized with .gitignore entry.
+      ENV['REACT_NATIVE_PATH'] = react_native_path
+      hermesc_path = "${REACT_NATIVE_PATH}/sdks/hermes-engine/build_host_hermesc"
+      # NOTE: Prepare command is not run  if the pod is not downloaded.
+      spec.prepare_command = ". #{react_native_path}/sdks/hermes-engine/utils/build-hermesc-xcode.sh #{hermesc_path}"
+    end
+
+    spec.user_target_xcconfig = {
+      'FRAMEWORK_SEARCH_PATHS' => '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/iphoneos" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/iphonesimulator" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/macosx" ' +
+                                  '"$(PODS_ROOT)/hermes-engine/destroot/Library/Frameworks/catalyst"',
+      'OTHER_LDFLAGS' => '-framework "hermes"',
+      'HERMES_CLI_PATH' => "#{hermesc_path}/bin/hermesc"
+    }
+
+    spec.script_phases = [
+      {
+        :name => 'Build Hermes',
+        :script => <<-EOS
+        . ${PODS_ROOT}/../.xcode.env
+        export CMAKE_BINARY=${CMAKE_BINARY:-#{%x(command -v cmake | tr -d '\n')}}
+        . ${REACT_NATIVE_PATH}/sdks/hermes-engine/utils/build-hermes-xcode.sh #{version} #{hermesc_path}/ImportHermesc.cmake
+        EOS
+      },
+      {
+        :name => 'Copy Hermes Framework',
+        :script => ". ${REACT_NATIVE_PATH}/sdks/hermes-engine/utils/copy-hermes-xcode.sh"
+      }
+    ]
+  end
+end
diff --git a/node_modules/react-native/sdks/hermes/hermes-utils.rb b/node_modules/react-native/sdks/hermes/hermes-utils.rb
new file mode 100644
index 0000000..0842496
--- /dev/null
+++ b/node_modules/react-native/sdks/hermes/hermes-utils.rb
@@ -0,0 +1,26 @@
+# Copyright (c) Meta Platforms, Inc. and affiliates.
+#
+# This source code is licensed under the MIT license found in the
+# LICENSE file in the root directory of this source tree.
+
+require 'net/http'
+require 'rexml/document'
+
+# This function downloads the nightly prebuilt version of Hermes based on the passed version
+# and save it in the node_module/react_native/sdks/downloads folder
+# It then returns the path to the hermes tarball
+#
+# Parameters
+# - react_native_path: the path to the React Native folder in node modules. It is used as root path to store the Hermes tarball
+# - version: the version of React Native that requires the Hermes tarball
+# Returns: the path to the downloaded Hermes tarball
+def download_nightly_hermes(react_native_path, version)
+    params = "r=snapshots\&g=com.facebook.react\&a=react-native-artifacts\&c=hermes-ios-debug\&e=tar.gz\&v=#{version}-SNAPSHOT"
+    tarball_url = "http://oss.sonatype.org/service/local/artifact/maven/redirect\?#{params}"
+
+    destination_folder = "#{react_native_path}/sdks/downloads"
+    destination_path = "#{destination_folder}/hermes-ios.tar.gz"
+
+    `mkdir -p "#{destination_folder}" && curl "#{tarball_url}" -Lo "#{destination_path}"`
+    return destination_path
+end
diff --git a/node_modules/react-native/types/index.d.ts b/node_modules/react-native/types/index.d.ts
index ff9d3ec..d2d5a9f 100644
--- a/node_modules/react-native/types/index.d.ts
+++ b/node_modules/react-native/types/index.d.ts
@@ -71,93 +71,93 @@
 /// <reference path="modules/globals.d.ts" />
 /// <reference path="modules/LaunchScreen.d.ts" />
 
-export * from '../Libraries/ActionSheetIOS/ActionSheetIOS';
-export * from '../Libraries/Alert/Alert';
-export * from '../Libraries/Animated/Animated';
-export * from '../Libraries/Animated/Easing';
-export * from '../Libraries/Animated/useAnimatedValue';
-export * from '../Libraries/AppState/AppState';
-export * from '../Libraries/BatchedBridge/NativeModules';
-export * from '../Libraries/Components/AccessibilityInfo/AccessibilityInfo';
-export * from '../Libraries/Components/ActivityIndicator/ActivityIndicator';
-export * from '../Libraries/Components/Clipboard/Clipboard';
-export * from '../Libraries/Components/DatePicker/DatePickerIOS';
-export * from '../Libraries/Components/DrawerAndroid/DrawerLayoutAndroid';
-export * from '../Libraries/Components/Keyboard/Keyboard';
-export * from '../Libraries/Components/Keyboard/KeyboardAvoidingView';
-export * from '../Libraries/Components/Pressable/Pressable';
-export * from '../Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';
-export * from '../Libraries/Components/ProgressViewIOS/ProgressViewIOS';
-export * from '../Libraries/Components/RefreshControl/RefreshControl';
-export * from '../Libraries/Components/SafeAreaView/SafeAreaView';
-export * from '../Libraries/Components/ScrollView/ScrollView';
-export * from '../Libraries/Components/Slider/Slider';
-export * from '../Libraries/Components/StatusBar/StatusBar';
-export * from '../Libraries/Components/Switch/Switch';
-export * from '../Libraries/Components/TextInput/InputAccessoryView';
-export * from '../Libraries/Components/TextInput/TextInput';
-export * from '../Libraries/Components/ToastAndroid/ToastAndroid';
-export * from '../Libraries/Components/Touchable/Touchable';
-export * from '../Libraries/Components/Touchable/TouchableHighlight';
-export * from '../Libraries/Components/Touchable/TouchableNativeFeedback';
-export * from '../Libraries/Components/Touchable/TouchableOpacity';
-export * from '../Libraries/Components/Touchable/TouchableWithoutFeedback';
-export * from '../Libraries/Components/View/View';
-export * from '../Libraries/Components/View/ViewAccessibility';
-export * from '../Libraries/Components/View/ViewPropTypes';
-export * from '../Libraries/Components/Button';
-export * from '../Libraries/EventEmitter/NativeEventEmitter';
-export * from '../Libraries/EventEmitter/RCTDeviceEventEmitter';
-export * from '../Libraries/EventEmitter/RCTNativeAppEventEmitter';
-export * from '../Libraries/Image/Image';
-export * from '../Libraries/Image/ImageResizeMode';
-export * from '../Libraries/Image/ImageSource';
-export * from '../Libraries/Interaction/InteractionManager';
-export * from '../Libraries/Interaction/PanResponder';
-export * from '../Libraries/LayoutAnimation/LayoutAnimation';
-export * from '../Libraries/Linking/Linking';
-export * from '../Libraries/Lists/FlatList';
-export * from '../Libraries/Lists/SectionList';
-export * from '../Libraries/Lists/VirtualizedList';
-export * from '../Libraries/LogBox/LogBox';
-export * from '../Libraries/Modal/Modal';
-export * as Systrace from '../Libraries/Performance/Systrace';
-export * from '../Libraries/PermissionsAndroid/PermissionsAndroid';
-export * from '../Libraries/PushNotificationIOS/PushNotificationIOS';
-export * from '../Libraries/ReactNative/AppRegistry';
-export * from '../Libraries/ReactNative/I18nManager';
-export * from '../Libraries/ReactNative/RendererProxy';
-export * from '../Libraries/ReactNative/RootTag';
-export * from '../Libraries/ReactNative/UIManager';
-export * from '../Libraries/ReactNative/requireNativeComponent';
-export * from '../Libraries/Settings/Settings';
-export * from '../Libraries/Share/Share';
-export * from '../Libraries/StyleSheet/PlatformColorValueTypesIOS';
-export * from '../Libraries/StyleSheet/PlatformColorValueTypes';
-export * from '../Libraries/StyleSheet/StyleSheet';
-export * from '../Libraries/StyleSheet/StyleSheetTypes';
-export * from '../Libraries/StyleSheet/processColor';
-export * from '../Libraries/Text/Text';
-export * from '../Libraries/TurboModule/RCTExport';
-export * as TurboModuleRegistry from '../Libraries/TurboModule/TurboModuleRegistry';
-export * from '../Libraries/Types/CoreEventTypes';
-export * from '../Libraries/Utilities/Appearance';
-export * from '../Libraries/Utilities/BackHandler';
-export * from '../Libraries/Utilities/DevSettings';
-export * from '../Libraries/Utilities/Dimensions';
-export * from '../Libraries/Utilities/PixelRatio';
-export * from '../Libraries/Utilities/Platform';
-export * from '../Libraries/Vibration/Vibration';
-export * from '../Libraries/YellowBox/YellowBoxDeprecated';
-export * from '../Libraries/vendor/core/ErrorUtils';
-export * from '../Libraries/vendor/emitter/EventEmitter';
+export * from 'react-native/Libraries/ActionSheetIOS/ActionSheetIOS';
+export * from 'react-native/Libraries/Alert/Alert';
+export * from 'react-native/Libraries/Animated/Animated';
+export * from 'react-native/Libraries/Animated/Easing';
+export * from 'react-native/Libraries/Animated/useAnimatedValue';
+export * from 'react-native/Libraries/AppState/AppState';
+export * from 'react-native/Libraries/BatchedBridge/NativeModules';
+export * from 'react-native/Libraries/Components/AccessibilityInfo/AccessibilityInfo';
+export * from 'react-native/Libraries/Components/ActivityIndicator/ActivityIndicator';
+export * from 'react-native/Libraries/Components/Clipboard/Clipboard';
+export * from 'react-native/Libraries/Components/DatePicker/DatePickerIOS';
+export * from 'react-native/Libraries/Components/DrawerAndroid/DrawerLayoutAndroid';
+export * from 'react-native/Libraries/Components/Keyboard/Keyboard';
+export * from 'react-native/Libraries/Components/Keyboard/KeyboardAvoidingView';
+export * from 'react-native/Libraries/Components/Pressable/Pressable';
+export * from 'react-native/Libraries/Components/ProgressBarAndroid/ProgressBarAndroid';
+export * from 'react-native/Libraries/Components/ProgressViewIOS/ProgressViewIOS';
+export * from 'react-native/Libraries/Components/RefreshControl/RefreshControl';
+export * from 'react-native/Libraries/Components/SafeAreaView/SafeAreaView';
+export * from 'react-native/Libraries/Components/ScrollView/ScrollView';
+export * from 'react-native/Libraries/Components/Slider/Slider';
+export * from 'react-native/Libraries/Components/StatusBar/StatusBar';
+export * from 'react-native/Libraries/Components/Switch/Switch';
+export * from 'react-native/Libraries/Components/TextInput/InputAccessoryView';
+export * from 'react-native/Libraries/Components/TextInput/TextInput';
+export * from 'react-native/Libraries/Components/ToastAndroid/ToastAndroid';
+export * from 'react-native/Libraries/Components/Touchable/Touchable';
+export * from 'react-native/Libraries/Components/Touchable/TouchableHighlight';
+export * from 'react-native/Libraries/Components/Touchable/TouchableNativeFeedback';
+export * from 'react-native/Libraries/Components/Touchable/TouchableOpacity';
+export * from 'react-native/Libraries/Components/Touchable/TouchableWithoutFeedback';
+export * from 'react-native/Libraries/Components/View/View';
+export * from 'react-native/Libraries/Components/View/ViewAccessibility';
+export * from 'react-native/Libraries/Components/View/ViewPropTypes';
+export * from 'react-native/Libraries/Components/Button';
+export * from 'react-native/Libraries/EventEmitter/NativeEventEmitter';
+export * from 'react-native/Libraries/EventEmitter/RCTDeviceEventEmitter';
+export * from 'react-native/Libraries/EventEmitter/RCTNativeAppEventEmitter';
+export * from 'react-native/Libraries/Image/Image';
+export * from 'react-native/Libraries/Image/ImageResizeMode';
+export * from 'react-native/Libraries/Image/ImageSource';
+export * from 'react-native/Libraries/Interaction/InteractionManager';
+export * from 'react-native/Libraries/Interaction/PanResponder';
+export * from 'react-native/Libraries/LayoutAnimation/LayoutAnimation';
+export * from 'react-native/Libraries/Linking/Linking';
+export * from 'react-native/Libraries/Lists/FlatList';
+export * from 'react-native/Libraries/Lists/SectionList';
+export * from 'react-native/Libraries/Lists/VirtualizedList';
+export * from 'react-native/Libraries/LogBox/LogBox';
+export * from 'react-native/Libraries/Modal/Modal';
+export * as Systrace from 'react-native/Libraries/Performance/Systrace';
+export * from 'react-native/Libraries/PermissionsAndroid/PermissionsAndroid';
+export * from 'react-native/Libraries/PushNotificationIOS/PushNotificationIOS';
+export * from 'react-native/Libraries/ReactNative/AppRegistry';
+export * from 'react-native/Libraries/ReactNative/I18nManager';
+export * from 'react-native/Libraries/ReactNative/RendererProxy';
+export * from 'react-native/Libraries/ReactNative/RootTag';
+export * from 'react-native/Libraries/ReactNative/UIManager';
+export * from 'react-native/Libraries/ReactNative/requireNativeComponent';
+export * from 'react-native/Libraries/Settings/Settings';
+export * from 'react-native/Libraries/Share/Share';
+export * from 'react-native/Libraries/StyleSheet/PlatformColorValueTypesIOS';
+export * from 'react-native/Libraries/StyleSheet/PlatformColorValueTypes';
+export * from 'react-native/Libraries/StyleSheet/StyleSheet';
+export * from 'react-native/Libraries/StyleSheet/StyleSheetTypes';
+export * from 'react-native/Libraries/StyleSheet/processColor';
+export * from 'react-native/Libraries/Text/Text';
+export * from 'react-native/Libraries/TurboModule/RCTExport';
+export * as TurboModuleRegistry from 'react-native/Libraries/TurboModule/TurboModuleRegistry';
+export * from 'react-native/Libraries/Types/CoreEventTypes';
+export * from 'react-native/Libraries/Utilities/Appearance';
+export * from 'react-native/Libraries/Utilities/BackHandler';
+export * from 'react-native/Libraries/Utilities/DevSettings';
+export * from 'react-native/Libraries/Utilities/Dimensions';
+export * from 'react-native/Libraries/Utilities/PixelRatio';
+export * from 'react-native/Libraries/Utilities/Platform';
+export * from 'react-native/Libraries/Vibration/Vibration';
+export * from 'react-native/Libraries/YellowBox/YellowBoxDeprecated';
+export * from 'react-native/Libraries/vendor/core/ErrorUtils';
+export * from 'react-native/Libraries/vendor/emitter/EventEmitter';
 
-export * from './public/DeprecatedPropertiesAlias';
-export * from './public/Insets';
-export * from './public/ReactNativeRenderer';
-export * from './public/ReactNativeTypes';
+export * from 'react-native/types/public/DeprecatedPropertiesAlias';
+export * from 'react-native/types/public/Insets';
+export * from 'react-native/types/public/ReactNativeRenderer';
+export * from 'react-native/types/public/ReactNativeTypes';
 
-import type {ErrorUtils} from '../Libraries/vendor/core/ErrorUtils';
+import type {ErrorUtils} from 'react-native/Libraries/vendor/core/ErrorUtils';
 
 declare global {
   interface NodeRequire {
diff --git a/node_modules/react-native/types/public/ReactNativeRenderer.d.ts b/node_modules/react-native/types/public/ReactNativeRenderer.d.ts
index 542788c..a488075 100644
--- a/node_modules/react-native/types/public/ReactNativeRenderer.d.ts
+++ b/node_modules/react-native/types/public/ReactNativeRenderer.d.ts
@@ -7,7 +7,7 @@
  * @format
  */
 
-import {GestureResponderEvent} from '../../Libraries/Types/CoreEventTypes';
+import {GestureResponderEvent} from 'react-native/Libraries/Types/CoreEventTypes';
 
 /**
  * Gesture recognition on mobile devices is much more complicated than web.
