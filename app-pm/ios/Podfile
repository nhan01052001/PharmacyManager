require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
#$RNFirebaseAsStaticFramework = true # if you're using firebase

platform :ios, min_ios_version_supported
prepare_react_native_project!

# If you are using a `react-native-flipper` your iOS build will fail when `NO_FLIPPER=1` is set.
# because `react-native-flipper` depends on (FlipperKit,...) that will be excluded
#
# To fix this you can also exclude `react-native-flipper` using a `react-native.config.js`
# ```js
# module.exports = {
#   dependencies: {
#     ...(process.env.NO_FLIPPER ? { 'react-native-flipper': { platforms: { ios: null } } } : {}),
# ```
flipper_config = ENV['NO_FLIPPER'] == "1" ? FlipperConfiguration.disabled : FlipperConfiguration.enabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
#  use_frameworks! :linkage => linkage.to_sym
end

use_frameworks! :linkage => :static
use_react_native!
target 'apppm' do
  config = use_native_modules!
#  pod 'RNFirebase', :path => '../node_modules/react-native-firebase/ios'
  # pod 'Firebase/Core', '~> 10.17.0'
  # pod 'Firebase/Messaging', '~> 10.17.0'
  # pod 'Firebase'
  # pod 'FirebaseCore', :modular_headers => true
  pod 'GoogleUtilities', :modular_headers => true
  pod 'React', :path => '../node_modules/react-native/'
  pod 'React-Core', :path => '../node_modules/react-native/'
  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'ReactCommon/turbomodule/core', :path => "../node_modules/react-native/ReactCommon"
  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga', :modular_headers => true
  
  pod 'RCT-Folly', :podspec => "../node_modules/react-native/third-party-podspecs/RCT-Folly.podspec"
  # Flags change depending on the env values.
  flags = get_default_flags()

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => false,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
#    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

#  $FirebaseSDKVersion = '10.17.0' # for Firebase
  target 'apppmTests' do
    inherit! :complete
    # Pods for testing
  end
  
  post_install do |installer|
#    rnfirebase = installer.pods_project.targets.find { |target| target.name == 'RNFirebase' }
#    rnfirebase.build_configurations.each do |config|
#      config.build_settings['HEADER_SEARCH_PATHS'] = '$(inherited) ${PODS_ROOT}/Headers/Public/**'
#    end
    installer.pods_project.build_configuration_list.build_configurations.each do |configuration|
        configuration.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
    end
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = "arm64"
      end
    end
#    react_native_post_install(
#      installer,
#      # Set `mac_catalyst_enabled` to `true` in order to apply patches
#      # necessary for Mac Catalyst builds
#      :mac_catalyst_enabled => false
#    )
    installer.pod_targets.each do |pod|
      if pod.name.eql?('RNScreens')
        def pod.build_type
            Pod::BuildType.static_library
        end
      end
    end
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    
    # for Firebase (all below)
#        installer.pods_project.targets.each do |target|
#          target.build_configurations.each do |config|
#            config.build_settings["GCC_WARN_INHIBIT_ALL_WARNINGS"] = "YES"
#          end
#        end
#
#        installer.pods_project.targets.each do |target|
#          target.build_configurations.each do |config|
#            config.build_settings["CC"] = "clang"
#            config.build_settings["LD"] = "clang"
#            config.build_settings["CXX"] = "clang++"
#            config.build_settings["LDPLUSPLUS"] = "clang++"
#          end
#        end
#
#        installer.aggregate_targets.each do |aggregate_target|
#          aggregate_target.user_project.native_targets.each do |target|
#            target.build_configurations.each do |config|
#              config.build_settings['ONLY_ACTIVE_ARCH'] = 'YES'
#              config.build_settings['EXCLUDED_ARCHS'] = 'i386'
#            end
#          end
#          aggregate_target.user_project.save
#        end
#        installer.pods_project.targets.each do |target|
#          if (target.name.eql?('FBReactNativeSpec'))
#            target.build_phases.each do |build_phase|
#              if (build_phase.respond_to?(:name) && build_phase.name.eql?('[CP-User] Generate Specs'))
#                target.build_phases.move(build_phase, 0)
#              end
#            end
#          end
#        end
#
#        installer.pods_project.targets.each do |target|
#          target.build_configurations.each do |config|
#            config.build_settings["ENABLE_BITCODE"] = "NO"
#          end
#        end
  end
end
